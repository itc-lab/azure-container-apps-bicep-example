name: Build and Deploy
on:
  push:
    branches: [main]
    tags: ["v*.*.*"]
    paths-ignore:
      - "README.md"
      - ".vscode/**"
      - "assets/**"
      - "build-and-run.md"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
jobs:
  set-env:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.main.outputs.version }}
      created: ${{ steps.main.outputs.created }}
      repository: ${{ steps.main.outputs.repository }}
      appname: ${{ steps.main.outputs.appname }}
    steps:
      - id: main
        run: |
          echo version=$(echo ${GITHUB_SHA} | cut -c1-7) >> $GITHUB_OUTPUT
          echo created=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> $GITHUB_OUTPUT
          echo repository=$GITHUB_REPOSITORY >> $GITHUB_OUTPUT
          echo appname=react-frontend >> $GITHUB_OUTPUT

  package-services:
    runs-on: ubuntu-latest
    needs: set-env
    permissions:
      contents: read
      packages: write
    outputs:
      containerImage-react: ${{ steps.image-tag.outputs.image-react-frontend }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ needs.set-env.outputs.repository }}/${{ needs.set-env.outputs.appname }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "."
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Output image tag
        id: image-tag
        run: |
          echo image-${{ needs.set-env.outputs.appname }}=${{ env.REGISTRY }}/$GITHUB_REPOSITORY/${{ needs.set-env.outputs.appname }}:sha-${{ needs.set-env.outputs.version }} | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: package-services
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy bicep
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create -g ${{ secrets.RESOURCE_GROUP }} -l japaneast
            az deployment group create -g ${{ secrets.RESOURCE_GROUP }} -f ./deploy/main.bicep \
              -p \
                minReplicas=0 \
                reactImage='${{ needs.package-services.outputs.containerImage-react }}' \
                reactPort=3000 \
                containerRegistry=${{ env.REGISTRY }} \
                containerRegistryUsername=${{ github.actor }} \
                containerRegistryPassword=${{ secrets.GITHUB_TOKEN }}
